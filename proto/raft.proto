syntax = "proto3";

package proto;

enum Role {
  Invalid = 0;
  Leader = 1;
  Candidate = 2;
  Follower = 3;
}

message Entry {
  uint64 term = 1;
  uint64 index = 2;
  bytes content = 3;
}

message ApplyMsg {
  uint64 index = 1;
  bytes content = 2;
  bool use_snapshot = 3;
  bytes snapshot = 4;
}

service Raft {
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteReply);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesReply);
  rpc InstallSnapshot(InstallSnapshotRequest) returns (InstallSnapshotReply);
}

message RequestVoteRequest {
  uint64 id = 1;
  uint64 term = 2;
  uint64 last_index = 3;
  uint64 last_term = 4;
}

message RequestVoteReply {
  uint64 id = 1;
  uint64 term = 2;
  bool reject = 3;
}

message AppendEntriesRequest {
  uint64 id = 1;
  uint64 term = 2;
  uint64 last_log_term = 3;
  uint64 last_log_index = 4;
  uint64 commit = 5;
  repeated Entry entries = 6;
}

message MatchInfo {
  uint64 match_index = 1;
  uint64 match_term =2;
}

message LogInfo {
  uint64 latest_index = 1;
  uint64 latest_term = 2;
}

message AppendEntriesReply {
  uint64 id = 1;
  uint64 term = 2;
  bool reject = 3;
  oneof info {
    MatchInfo match_info = 4;
    LogInfo log_info = 5;
  }
}

message InstallSnapshotRequest {
  uint64 id = 1;
  uint64 term = 2;
  uint64 leader = 3;
  uint64 last_include_index = 4;
  uint64 last_include_term = 5;
  uint64  offset = 6;
  bytes data = 7;
}

message InstallSnapshotReply {
  uint64  id = 1;
  uint64 term = 2;
  bool reject = 3;
}

message ProposeRequest {
  bytes command = 1;
}

message ProposeReply {
  uint64 term = 1;
  uint64 index = 2;
  bool leader = 3;
}