// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shardmaster.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StringList struct {
	Strings              []string `protobuf:"bytes,1,rep,name=strings,proto3" json:"strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringList) Reset()         { *m = StringList{} }
func (m *StringList) String() string { return proto.CompactTextString(m) }
func (*StringList) ProtoMessage()    {}
func (*StringList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{0}
}

func (m *StringList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringList.Unmarshal(m, b)
}
func (m *StringList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringList.Marshal(b, m, deterministic)
}
func (m *StringList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringList.Merge(m, src)
}
func (m *StringList) XXX_Size() int {
	return xxx_messageInfo_StringList.Size(m)
}
func (m *StringList) XXX_DiscardUnknown() {
	xxx_messageInfo_StringList.DiscardUnknown(m)
}

var xxx_messageInfo_StringList proto.InternalMessageInfo

func (m *StringList) GetStrings() []string {
	if m != nil {
		return m.Strings
	}
	return nil
}

type JoinRequest struct {
	Groups               map[uint64]*StringList `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{1}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetGroups() map[uint64]*StringList {
	if m != nil {
		return m.Groups
	}
	return nil
}

type JoinReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinReply) Reset()         { *m = JoinReply{} }
func (m *JoinReply) String() string { return proto.CompactTextString(m) }
func (*JoinReply) ProtoMessage()    {}
func (*JoinReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{2}
}

func (m *JoinReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinReply.Unmarshal(m, b)
}
func (m *JoinReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinReply.Marshal(b, m, deterministic)
}
func (m *JoinReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinReply.Merge(m, src)
}
func (m *JoinReply) XXX_Size() int {
	return xxx_messageInfo_JoinReply.Size(m)
}
func (m *JoinReply) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinReply.DiscardUnknown(m)
}

var xxx_messageInfo_JoinReply proto.InternalMessageInfo

type LeaveRequest struct {
	GIDs                 []uint64 `protobuf:"varint,1,rep,packed,name=gIDs,proto3" json:"gIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveRequest) Reset()         { *m = LeaveRequest{} }
func (m *LeaveRequest) String() string { return proto.CompactTextString(m) }
func (*LeaveRequest) ProtoMessage()    {}
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{3}
}

func (m *LeaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRequest.Unmarshal(m, b)
}
func (m *LeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRequest.Marshal(b, m, deterministic)
}
func (m *LeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRequest.Merge(m, src)
}
func (m *LeaveRequest) XXX_Size() int {
	return xxx_messageInfo_LeaveRequest.Size(m)
}
func (m *LeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRequest proto.InternalMessageInfo

func (m *LeaveRequest) GetGIDs() []uint64 {
	if m != nil {
		return m.GIDs
	}
	return nil
}

type LeaveReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveReply) Reset()         { *m = LeaveReply{} }
func (m *LeaveReply) String() string { return proto.CompactTextString(m) }
func (*LeaveReply) ProtoMessage()    {}
func (*LeaveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{4}
}

func (m *LeaveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveReply.Unmarshal(m, b)
}
func (m *LeaveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveReply.Marshal(b, m, deterministic)
}
func (m *LeaveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveReply.Merge(m, src)
}
func (m *LeaveReply) XXX_Size() int {
	return xxx_messageInfo_LeaveReply.Size(m)
}
func (m *LeaveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveReply.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveReply proto.InternalMessageInfo

type MoveRequest struct {
	ZoneID               uint64   `protobuf:"varint,1,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	GID                  uint64   `protobuf:"varint,2,opt,name=gID,proto3" json:"gID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveRequest) Reset()         { *m = MoveRequest{} }
func (m *MoveRequest) String() string { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()    {}
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{5}
}

func (m *MoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveRequest.Unmarshal(m, b)
}
func (m *MoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveRequest.Marshal(b, m, deterministic)
}
func (m *MoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveRequest.Merge(m, src)
}
func (m *MoveRequest) XXX_Size() int {
	return xxx_messageInfo_MoveRequest.Size(m)
}
func (m *MoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveRequest proto.InternalMessageInfo

func (m *MoveRequest) GetZoneID() uint64 {
	if m != nil {
		return m.ZoneID
	}
	return 0
}

func (m *MoveRequest) GetGID() uint64 {
	if m != nil {
		return m.GID
	}
	return 0
}

type MoveReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveReply) Reset()         { *m = MoveReply{} }
func (m *MoveReply) String() string { return proto.CompactTextString(m) }
func (*MoveReply) ProtoMessage()    {}
func (*MoveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{6}
}

func (m *MoveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveReply.Unmarshal(m, b)
}
func (m *MoveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveReply.Marshal(b, m, deterministic)
}
func (m *MoveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveReply.Merge(m, src)
}
func (m *MoveReply) XXX_Size() int {
	return xxx_messageInfo_MoveReply.Size(m)
}
func (m *MoveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveReply.DiscardUnknown(m)
}

var xxx_messageInfo_MoveReply proto.InternalMessageInfo

type QueryRequest struct {
	Version              uint64   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{7}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type ClusterConfig struct {
	Groups               map[uint64]*StringList `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Zones                map[uint64]uint64      `protobuf:"bytes,2,rep,name=zones,proto3" json:"zones,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Version              uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ClusterConfig) Reset()         { *m = ClusterConfig{} }
func (m *ClusterConfig) String() string { return proto.CompactTextString(m) }
func (*ClusterConfig) ProtoMessage()    {}
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{8}
}

func (m *ClusterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterConfig.Unmarshal(m, b)
}
func (m *ClusterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterConfig.Marshal(b, m, deterministic)
}
func (m *ClusterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterConfig.Merge(m, src)
}
func (m *ClusterConfig) XXX_Size() int {
	return xxx_messageInfo_ClusterConfig.Size(m)
}
func (m *ClusterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterConfig proto.InternalMessageInfo

func (m *ClusterConfig) GetGroups() map[uint64]*StringList {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ClusterConfig) GetZones() map[uint64]uint64 {
	if m != nil {
		return m.Zones
	}
	return nil
}

func (m *ClusterConfig) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type QueryReply struct {
	Version              uint64         `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Config               *ClusterConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *QueryReply) Reset()         { *m = QueryReply{} }
func (m *QueryReply) String() string { return proto.CompactTextString(m) }
func (*QueryReply) ProtoMessage()    {}
func (*QueryReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2e8d56bfd6f7a2a, []int{9}
}

func (m *QueryReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryReply.Unmarshal(m, b)
}
func (m *QueryReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryReply.Marshal(b, m, deterministic)
}
func (m *QueryReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryReply.Merge(m, src)
}
func (m *QueryReply) XXX_Size() int {
	return xxx_messageInfo_QueryReply.Size(m)
}
func (m *QueryReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryReply proto.InternalMessageInfo

func (m *QueryReply) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *QueryReply) GetConfig() *ClusterConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*StringList)(nil), "proto.stringList")
	proto.RegisterType((*JoinRequest)(nil), "proto.JoinRequest")
	proto.RegisterMapType((map[uint64]*StringList)(nil), "proto.JoinRequest.GroupsEntry")
	proto.RegisterType((*JoinReply)(nil), "proto.JoinReply")
	proto.RegisterType((*LeaveRequest)(nil), "proto.LeaveRequest")
	proto.RegisterType((*LeaveReply)(nil), "proto.LeaveReply")
	proto.RegisterType((*MoveRequest)(nil), "proto.MoveRequest")
	proto.RegisterType((*MoveReply)(nil), "proto.MoveReply")
	proto.RegisterType((*QueryRequest)(nil), "proto.QueryRequest")
	proto.RegisterType((*ClusterConfig)(nil), "proto.ClusterConfig")
	proto.RegisterMapType((map[uint64]*StringList)(nil), "proto.ClusterConfig.GroupsEntry")
	proto.RegisterMapType((map[uint64]uint64)(nil), "proto.ClusterConfig.ZonesEntry")
	proto.RegisterType((*QueryReply)(nil), "proto.QueryReply")
}

func init() { proto.RegisterFile("shardmaster.proto", fileDescriptor_e2e8d56bfd6f7a2a) }

var fileDescriptor_e2e8d56bfd6f7a2a = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xcd, 0xce, 0x93, 0x40,
	0x14, 0x0d, 0x14, 0xf8, 0xd2, 0x4b, 0x4d, 0xda, 0xb1, 0x31, 0x84, 0x85, 0x12, 0x16, 0xca, 0xa2,
	0xa9, 0x49, 0x8d, 0xda, 0xb8, 0x6d, 0x8d, 0xa9, 0x69, 0x17, 0x8e, 0xae, 0xdc, 0xa1, 0x8e, 0x48,
	0x44, 0x06, 0x67, 0xa0, 0x09, 0xbe, 0x86, 0x6f, 0xe0, 0xeb, 0xf8, 0x52, 0x66, 0x7e, 0x80, 0x41,
	0x71, 0xf7, 0xad, 0x98, 0x7b, 0x39, 0xe7, 0xcc, 0x99, 0x3b, 0x67, 0x60, 0xc5, 0xbf, 0xa4, 0xec,
	0xd3, 0xb7, 0x94, 0xd7, 0x84, 0x6d, 0x2b, 0x46, 0x6b, 0x8a, 0x5c, 0xf9, 0x89, 0x1f, 0x02, 0xf0,
	0x9a, 0xe5, 0x65, 0x76, 0xce, 0x79, 0x8d, 0x02, 0xb8, 0x51, 0x15, 0x0f, 0xac, 0x68, 0x96, 0xcc,
	0x71, 0x57, 0xc6, 0x3f, 0x2d, 0xf0, 0x5f, 0xd3, 0xbc, 0xc4, 0xe4, 0x7b, 0x43, 0x78, 0x8d, 0x9e,
	0x81, 0x97, 0x31, 0xda, 0x54, 0x0a, 0xe8, 0xef, 0xee, 0x2b, 0xd9, 0xad, 0x81, 0xd9, 0xbe, 0x92,
	0x80, 0x97, 0x65, 0xcd, 0x5a, 0xac, 0xd1, 0xe1, 0x19, 0x7c, 0xa3, 0x8d, 0x96, 0x30, 0xfb, 0x4a,
	0xda, 0xc0, 0x8a, 0xac, 0xc4, 0xc1, 0x62, 0x89, 0x1e, 0x81, 0x7b, 0x4d, 0x8b, 0x86, 0x04, 0x76,
	0x64, 0x25, 0xfe, 0x6e, 0xa5, 0x75, 0x07, 0x93, 0x58, 0xfd, 0x7f, 0x61, 0xef, 0xad, 0xd8, 0x87,
	0xb9, 0xda, 0xb0, 0x2a, 0xda, 0x38, 0x86, 0xc5, 0x99, 0xa4, 0x57, 0xd2, 0x59, 0x44, 0xe0, 0x64,
	0xa7, 0xa3, 0x32, 0xe8, 0x60, 0xb9, 0x8e, 0x17, 0x00, 0x1a, 0x23, 0x18, 0xcf, 0xc1, 0xbf, 0xd0,
	0x81, 0x70, 0x0f, 0xbc, 0x1f, 0xb4, 0x24, 0xa7, 0xa3, 0xf6, 0xa3, 0x2b, 0x61, 0x32, 0x3b, 0x1d,
	0xa5, 0x21, 0x07, 0x8b, 0xa5, 0xd8, 0x57, 0x11, 0x85, 0x4a, 0x02, 0x8b, 0x37, 0x0d, 0x61, 0x6d,
	0x27, 0x13, 0xc0, 0xcd, 0x95, 0x30, 0x9e, 0xd3, 0x52, 0xeb, 0x74, 0x65, 0xfc, 0xcb, 0x86, 0x3b,
	0x87, 0xa2, 0x11, 0xb7, 0x70, 0xa0, 0xe5, 0xe7, 0x3c, 0x43, 0xfb, 0xbf, 0xc6, 0x18, 0xe9, 0xe3,
	0x8e, 0x50, 0x53, 0x83, 0x44, 0x4f, 0xc1, 0x15, 0xf6, 0x78, 0x60, 0x4b, 0xe2, 0x83, 0x49, 0xe2,
	0x7b, 0x81, 0x50, 0x3c, 0x85, 0x36, 0xcd, 0xcd, 0x46, 0xe6, 0x6e, 0xf7, 0x66, 0xc2, 0x3d, 0xc0,
	0xb0, 0xf9, 0x84, 0xd8, 0xda, 0x14, 0x73, 0xcc, 0x3b, 0x7d, 0x07, 0xa0, 0xc7, 0x59, 0x15, 0xed,
	0xff, 0x87, 0x89, 0x36, 0xe0, 0x7d, 0x94, 0xa7, 0xd4, 0x7e, 0xd6, 0x53, 0x13, 0xc0, 0x1a, 0xb3,
	0xfb, 0x6d, 0x81, 0xff, 0x56, 0x3c, 0x82, 0x8b, 0x7c, 0x04, 0x68, 0x03, 0x8e, 0x48, 0x0e, 0x42,
	0xff, 0xe6, 0x36, 0x5c, 0x8e, 0x7a, 0xc2, 0xc5, 0x63, 0x70, 0x65, 0x6c, 0xd0, 0x5d, 0xfd, 0xcb,
	0x0c, 0x5a, 0xb8, 0x1a, 0x37, 0x05, 0x61, 0x03, 0x8e, 0x08, 0x48, 0x2f, 0x6f, 0xc4, 0xac, 0x97,
	0xef, 0x13, 0x24, 0xe4, 0xe5, 0x91, 0x7b, 0x79, 0x33, 0x4f, 0xbd, 0xfc, 0x30, 0x95, 0x0f, 0x9e,
	0xec, 0x3c, 0xf9, 0x13, 0x00, 0x00, 0xff, 0xff, 0x98, 0x9a, 0xc7, 0x7d, 0xd8, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShardMasterClient is the client API for ShardMaster service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShardMasterClient interface {
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinReply, error)
	Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*LeaveReply, error)
	Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveReply, error)
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryReply, error)
}

type shardMasterClient struct {
	cc *grpc.ClientConn
}

func NewShardMasterClient(cc *grpc.ClientConn) ShardMasterClient {
	return &shardMasterClient{cc}
}

func (c *shardMasterClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinReply, error) {
	out := new(JoinReply)
	err := c.cc.Invoke(ctx, "/proto.ShardMaster/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardMasterClient) Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*LeaveReply, error) {
	out := new(LeaveReply)
	err := c.cc.Invoke(ctx, "/proto.ShardMaster/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardMasterClient) Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveReply, error) {
	out := new(MoveReply)
	err := c.cc.Invoke(ctx, "/proto.ShardMaster/Move", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardMasterClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryReply, error) {
	out := new(QueryReply)
	err := c.cc.Invoke(ctx, "/proto.ShardMaster/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShardMasterServer is the server API for ShardMaster service.
type ShardMasterServer interface {
	Join(context.Context, *JoinRequest) (*JoinReply, error)
	Leave(context.Context, *LeaveRequest) (*LeaveReply, error)
	Move(context.Context, *MoveRequest) (*MoveReply, error)
	Query(context.Context, *QueryRequest) (*QueryReply, error)
}

// UnimplementedShardMasterServer can be embedded to have forward compatible implementations.
type UnimplementedShardMasterServer struct {
}

func (*UnimplementedShardMasterServer) Join(ctx context.Context, req *JoinRequest) (*JoinReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedShardMasterServer) Leave(ctx context.Context, req *LeaveRequest) (*LeaveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedShardMasterServer) Move(ctx context.Context, req *MoveRequest) (*MoveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Move not implemented")
}
func (*UnimplementedShardMasterServer) Query(ctx context.Context, req *QueryRequest) (*QueryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}

func RegisterShardMasterServer(s *grpc.Server, srv ShardMasterServer) {
	s.RegisterService(&_ShardMaster_serviceDesc, srv)
}

func _ShardMaster_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ShardMaster/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardMaster_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ShardMaster/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).Leave(ctx, req.(*LeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardMaster_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ShardMaster/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).Move(ctx, req.(*MoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardMaster_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ShardMaster/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShardMaster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ShardMaster",
	HandlerType: (*ShardMasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _ShardMaster_Join_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _ShardMaster_Leave_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _ShardMaster_Move_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _ShardMaster_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shardmaster.proto",
}
